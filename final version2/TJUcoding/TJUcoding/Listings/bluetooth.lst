C51 COMPILER V9.60.7.0   BLUETOOTH                                                         08/21/2023 16:29:31 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE BLUETOOTH
OBJECT MODULE PLACED IN .\Objects\bluetooth.obj
COMPILER INVOKED BY: D:\科创\C51\BIN\C51.EXE bluetooth.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\bl
                    -uetooth.lst) TABS(2) OBJECT(.\Objects\bluetooth.obj)

line level    source

   1          #include <bluetooth.h>
   2          #include "oled.h"
   3          
   4          int RETURN_FLAG = 0;  //模式切换变量
   5          //定义FLAG = 1时切换，=0继续运行
   6          int PATTERN = 0;  //模式变量初始化
   7          char Flag_BluetoothCar = 's';
   8          unsigned char m;
   9          
  10          void Bluetooth_Init()//蓝牙模块初始化
  11          {
  12   1         
  13   1         // SCON = 0x50;  // SCON: 模式1, 8-bit UART
  14   1      ////波特率9600，11.0592MHz
  15   1      ////  TMOD |= 0x20;
  16   1      ////  TH1=0xfd;     
  17   1      ////  TL1=0xfd;
  18   1      //  
  19   1      ////波特率9600，12MHz
  20   1      //  T2CON = 0x34; //RCLK、TCLK、TR2置1
  21   1      //  RCAP2L = 0xD9;  //9600波特率对应 FFD9，低位为D9
  22   1      //    RCAP2H = 0xFF;  //高位为FF
  23   1      //  EA = 1;       //打开总中断
  24   1      //  ES = 1;     //打开串口中断
  25   1      //  PS = 1;     //串口的优先级置1
  26   1        
  27   1      //    PCON |= 0x80; //使能波特率倍速位SMOD
  28   1      //  SCON = 0x50;    //8位数据,可变波特率，可接收数据
  29   1      //  TMOD &= 0x0F;   //清除定时器1模式位
  30   1      //  TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  31   1      //  TL1 = 0xF3;   //设定定时初值
  32   1      //  TH1 = 0xF3;   //设定定时器重装值
  33   1      //  ET1 = 0;    //禁止定时器1中断
  34   1      //  TR1 = 1;    //启动定时器1
  35   1      
  36   1        
  37   1          PCON |= 0x80;   //使能波特率倍速位SMOD//9600bps@11.0592MHz
  38   1          SCON = 0x50;    //8位数据,可变波特率
  39   1        //AUXR &= 0xBF;   //定时器1时钟为Fosc/12,即12T
  40   1        //AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  41   1        //TMOD &= 0x0F;   //清除定时器1模式位
  42   1        TMOD &= 0x00;
  43   1        //TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  44   1        TMOD |= 0x21;
  45   1        TL1 = 0xFA;   //设定定时初值
  46   1        TH1 = 0xFA;   //设定定时器重装值
  47   1        TL0 = 0x00;
  48   1        //TH1 = 0;
  49   1        TH0 = 0x00;
  50   1        ET1 = 0;    //禁止定时器1中断
  51   1        TR1 = 1;    //启动定时器1
  52   1      //  TMOD &= 0xF0;
  53   1      //  TMOD |= 0x01;
  54   1      //  //TL1 = 0;
C51 COMPILER V9.60.7.0   BLUETOOTH                                                         08/21/2023 16:29:31 PAGE 2   

  55   1      //  TL0 = 0x00;
  56   1      //  //TH1 = 0;
  57   1      //  TH0 = 0x00;
  58   1        
  59   1      //  PCON &= 0x7F;   //波特率不倍速
  60   1      //  SCON = 0x50;    //8位数据,可变波特率
  61   1      //  //AUXR &= 0xBF;   //定时器1时钟为Fosc/12,即12T
  62   1      //  //AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  63   1      //  TMOD &= 0x0F;   //清除定时器1模式位
  64   1      //  TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  65   1      //  TL1 = 0xFD;   //设定定时初值
  66   1      //  TH1 = 0xFD;   //设定定时器重装值
  67   1      //  ET1 = 0;    //禁止定时器1中断
  68   1      //  TR1 = 1;    //启动定时器1
  69   1      //  
  70   1      //  PCON |= 0x80;   //使能波特率倍速位SMOD//9600bps@12.000MHz
  71   1      //  SCON = 0x50;    //8位数据,可变波特率
  72   1      //  //AUXR &= 0xBF;   //定时器1时钟为Fosc/12,即12T
  73   1      //  //AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  74   1      //  TMOD &= 0x0F;   //清除定时器1模式位
  75   1      //  TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  76   1      //  TL1 = 0xF9;   //设定定时初值
  77   1      //  TH1 = 0xF9;   //设定定时器重装值
  78   1      //  ET1 = 0;    //禁止定时器1中断
  79   1      //  TR1 = 1;    //启动定时器1
  80   1      //  
  81   1      //  PCON &= 0x7F;   //波特率不倍速
  82   1      //  SCON = 0x50;    //8位数据,可变波特率
  83   1      //  //AUXR &= 0xBF;   //定时器1时钟为Fosc/12,即12T
  84   1      //  //AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  85   1      //  TMOD &= 0x0F;   //清除定时器1模式位
  86   1      //  TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  87   1      //  TL1 = 0xFD;   //设定定时初值
  88   1      //  TH1 = 0xFD;   //设定定时器重装值
  89   1      //  ET1 = 0;    //禁止定时器1中断
  90   1      //  TR1 = 1;    //启动定时器1
  91   1          ES=1;   //启动串口中断
  92   1        EA=1;   //中断总开关打开
  93   1        PS=1;
  94   1      }
  95          
  96          
  97          
  98          void BluetoothControlCar(void)
  99          {
 100   1        switch(Flag_BluetoothCar)
 101   1        {
 102   2          case 'f': Motor_Left(1,45); Motor_Right(1,45); break;
 103   2          case 'b': Motor_Left(0,45); Motor_Right(0,45); break;
 104   2          case 'l': Motor_Left(0,25); Motor_Right(1,40); break;
 105   2          case 'r': Motor_Left(1,40); Motor_Right(0,25); break;
 106   2          case 's': Motor_Stop();  break;
 107   2          default:break;
 108   2        }
 109   1      }
 110          
 111          //void UART_SER () interrupt 4
 112          //{
 113          //  unsigned char n;
 114          //  RI=0;
 115          //  n = SBUF;
 116          //  //添加一个标志
C51 COMPILER V9.60.7.0   BLUETOOTH                                                         08/21/2023 16:29:31 PAGE 3   

 117          //  switch (n)
 118          //    {
 119          //    case '0':PATTERN = 0; RETURN_FLAG = 1; break;   //静息模式（初始化模式）
 120          //    case '1':PATTERN = 1; RETURN_FLAG = 1; break; //小车电机转动
 121          //    case '2':PATTERN = 2; RETURN_FLAG = 1; break; //循迹模式
 122          //    case '3':PATTERN = 3; RETURN_FLAG = 1; break; //超声波测距加OLED显示
 123          //    case '4':PATTERN = 4; RETURN_FLAG = 1; break;   //循迹加超声避障
 124          //    case '5':PATTERN = 5; RETURN_FLAG = 1; break; //蓝牙遥控
 125          //    case 'f':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'f'; break;  //前进
 126          //    case 'b':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'b'; break;  //后退
 127          //    case 'l':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'l'; break;  //左转
 128          //    case 'r':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'r'; break;  //右转
 129          //    case 's':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 's'; break;  //停止
 130          //    default:break;
 131          //    }
 132          //  }
 133          
 134          //unsigned char Read_SBUF()
 135          //{
 136          //  return m;
 137          //  
 138          //} 
 139          
 140          void UART_SER() interrupt 4//串口中断序号为4
 141          {
 142   1        if(RI==1)
 143   1          {
 144   2            RI=0;//将RI接受中断归零
 145   2            //Read_SBUF();
 146   2            m=SBUF;//接受数据直接赋给P2
 147   2            //UART_Change=1;
 148   2            
 149   2            //UART_sendByte(agency);//将接受数据重新发出；
 150   2            switch (m)
 151   2          {
 152   3          case '0':PATTERN = 0; 
 153   3            RETURN_FLAG = 1;
 154   3            OLED_CLS();
 155   3        OLED_P8x16Str(0, 0, "Quiet", 0);
 156   3        OLED_Show16x16(48, 3, 0, 0);
 157   3        OLED_Show16x16(64, 3, 1, 0);
 158   3            break;  //静息模式（初始化模式）
 159   3          //case '1':PATTERN = 1; RETURN_FLAG = 1; break; //小车电机转动
 160   3          case '2':
 161   3            //TR1 = 1;
 162   3            //Bluetooth_Init();
 163   3          PATTERN = 2; 
 164   3            RETURN_FLAG = 1; 
 165   3            OLED_CLS();
 166   3           OLED_P8x16Str(0, 0, "Tracking", 0);
 167   3           OLED_Show16x16(48, 3, 2, 0);
 168   3           OLED_Show16x16(64, 3, 3, 0);
 169   3            break;  //循迹模式
 170   3          case '3':
 171   3            
 172   3          PATTERN = 3;
 173   3            RETURN_FLAG = 1;
 174   3            
 175   3                  OLED_CLS();
 176   3                OLED_P8x16Str(0, 0, "Distance:", 0);
 177   3            break;  //超声波测距加OLED显示
 178   3          case '4':PATTERN = 4; 
C51 COMPILER V9.60.7.0   BLUETOOTH                                                         08/21/2023 16:29:31 PAGE 4   

 179   3          RETURN_FLAG = 1; 
 180   3          OLED_CLS();
 181   3            OLED_P8x16Str(0, 0, "UnicTrac", 0);
 182   3          break;  //循迹加超声避障
 183   3          case '5':PATTERN = 5;
 184   3            RETURN_FLAG = 1;
 185   3            OLED_CLS();
 186   3                OLED_P8x16Str(0, 0, "BTCon", 0);
 187   3                OLED_Show16x16(48, 3, 4, 0);
 188   3                OLED_Show16x16(64, 3, 5, 0);
 189   3            break;  //蓝牙遥控
 190   3          case 'f':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'f'; break;  //前进
 191   3          case 'b':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'b'; break;  //后退
 192   3          case 'l':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'l'; break;  //左转
 193   3          case 'r':PATTERN = 5; RETURN_FLAG = 0; Flag_BluetoothCar = 'r'; break;  //右转
 194   3          case 's':PATTERN = 5;
 195   3            RETURN_FLAG = 0; 
 196   3            Flag_BluetoothCar = 's'; 
 197   3            break;  //停止
 198   3          default:break;
 199   3          }
 200   2      }
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    524    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
