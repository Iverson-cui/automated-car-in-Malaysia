C51 COMPILER V9.57.0.0   SOUND_SENSOR                                                      04/05/2022 14:50:39 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SOUND_SENSOR
OBJECT MODULE PLACED IN .\Objects\sound_sensor.obj
COMPILER INVOKED BY: D:\Keil_C51\C51\BIN\C51.EXE sound_sensor.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\sound_sensor.lst) OBJECT(.\Objects\sound_sensor.obj)

line level    source

   1          #include <sound_sensor.h>
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          
   5          sbit Trig = P3^3;//超声波IO口定义
   6          sbit Echo = P3^2;//外部中断0，端口不可更改
   7          /************************************
   8          
   9          超声波模块
  10          使用定时器1，外部中断0；
  11          测距过程：soundsensor进入->发送十微秒高电平->检测到echo高电平->\n
  12          ->打开定时器1，外部中断0->等待外部中断0->外部中断0打断定时器1计时->\n
  13          ->将距离结果存入distance
  14          
  15          *************************************/
  16          
  17          /************************************
  18          
  19          调用时模板：
  20          #include <sound_sensor.h>
  21          
  22          void main()
  23          {
  24                  initTimer1();
  25                  newProc = 1;
  26                  while(1)
  27                  {
  28                          SoundSensor();
  29          //可使用getdistance函数和distance调取距离
  30                          getDistance();
  31                          Distance;
  32                  }
  33          }
  34          
  35          问题：
  36          定时器中断与外部中断函数可不可以在外部C文件定义
  37          ANS：貌似可以随意放，并且不需要声明
  38          ************************************/
  39          
  40          
  41          
  42          unsigned int distance; //返回的距离
  43          unsigned char succeed,newProc;
  44          //succeed为测距成功标志位，当定时器中断一打开，succeed清零，并等待外部中断关闭定时器相应，如成功相应，succ
             -eed = 1；
  45          //newProc为一正在进行一轮测距的标志符，当=1时开始测距，开始时置为0, 结束时置为1（外部中断0），从外部调整其
             -为0会结束超声波
  46          
  47          
  48          
  49          void initTimer1()//外部中断0与定时器1初始化，并没有打开定时器1
  50          {
  51   1              TMOD |= 0x10; //T1置于16位定时器；
  52   1              //T1用于测量距离，要求最高优先级
C51 COMPILER V9.57.0.0   SOUND_SENSOR                                                      04/05/2022 14:50:39 PAGE 2   

  53   1              IT0 = 0;                        //外部中断0低电平有效
  54   1              IP = 0x08;              //提升T1的中断优先级――――――――――――――――？？再学一下
  55   1              EA = 1;                         //打卡总中断
  56   1              EX0 = 0;                        //打开外部中断0
  57   1              TH1 = 0;                        //定时器1赋初值
  58   1              TL1 = 0;
  59   1              Trig = 0;                       //拉低Trig电平
  60   1              succeed = 1;    //完成上一次循环的标志
  61   1              newProc = 0;    //关闭超声波，需手动打开
  62   1      }
  63          
  64          void SoundSensor()//设置返回distance
  65          {
  66   1      //      newProc = 1;                    //准备开始新的测距
  67   1              if(newProc)                             //开始新一轮测距
  68   1              {
  69   2                      newProc = 0;
  70   2                      delay(60);                      
  71   2                      //延时60毫秒避免前一次超声波发射的影响，
  72   2                      //在此处设置delay函数可能会影响循迹函数，注意测试
  73   2                      TH1 = 0;                                //定时器1赋初值
  74   2                      TL1 = 0;
  75   2                      Trig = 1;                               //输出高电平
  76   2                      //高电平保持十秒
  77   2                      _nop_();_nop_();_nop_();_nop_();_nop_();
  78   2                      _nop_();_nop_();_nop_();_nop_();_nop_();
  79   2                      Trig = 0;                               //输出10us脉冲
  80   2                      while(Echo == 0);               //等待高电平
  81   2                      //高电平来了开始计时
  82   2                      TR1 = 1;                                //定时器1开始计时
  83   2                      EX0 = 1;                                //等待Echo低电平触发中断
  84   2                      succeed = 0;            //测距成功标志位清零
  85   2              }
  86   1      }
  87          
  88          void EXT0() interrupt 0 //由Echo触发的外部中断0
  89          {
  90   1              TR1 = 0;                                        //定时器1关闭
  91   1              EX0 = 0;                                        //外部中断0关闭
  92   1              succeed = 1;                    //成功测量标志置1
  93   1              distance = TH1;         //测量结果高八位
  94   1              distance <<= 8;         //放入十六位的高八位
  95   1              distance |= TL1;        //与低八位合并
  96   1              distance = distance * 0.0172;//单位cm
  97   1              //原刷新数码管内容位置
  98   1              newProc = 1;
  99   1      }
 100          
 101          unsigned int getDistance()      //便于返回distance――――――――？？distance能不能直接在主函数调用？
 102          {
 103   1              return distance;
 104   1      }
 105          
 106          void delay(unsigned int xms) //ms延时函数
 107          {
 108   1              unsigned int i,j;
 109   1              for(i=xms;i>0;i--)
 110   1              for(j=112;j>0;j--);
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.57.0.0   SOUND_SENSOR                                                      04/05/2022 14:50:39 PAGE 3   

   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
